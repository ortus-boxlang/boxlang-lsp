/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id "application"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")

    // https://mvnrepository.com/artifact/org.eclipse.lsp4j/org.eclipse.lsp4j
    implementation "org.eclipse.lsp4j:org.eclipse.lsp4j:0.22.0"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.14.0'

    // cli 
    implementation 'info.picocli:picocli:4.7.5'

    implementation project(":boxlang" )
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("ortus.boxlanglsp.App")
}

jar {
    archiveBaseName = 'boxlang-lsp'
    archiveVersion =  "${version}"
	/**
	 *  The manifest for the shadowJar task is configured to inherit from the manifest of the standard jar task.
	 */
 	manifest {
       attributes 'Main-Class': 'ortus.boxlanglsp.App'
	   attributes 'Description': 'This is the Ortus BoxLang LSP'
    }
}
shadowJar {
	archiveBaseName = "boxlang-lsp"
    dependencies {
        exclude project(':boxlang') 
    }
}

/**
 * Test Task Customizations
 */
test {
	useJUnitPlatform()
	testLogging {
		showStandardStreams = true
	}
	// dependsOn compileJava, compileTestModule, compileTestJava
	// classpath += files( "./modules" )
	//exclude '**/resources/**'
}

// tasks.named<Test>("test") {
//     // Use JUnit Platform for unit tests.
//     useJUnitPlatform()
// }
